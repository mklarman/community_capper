1 - start a project with postgres: rails new Project_name --database=postgresql

2 - open project (subl .) and add gem 'devise' to the Gemfile and run bundle install in the terminal

3 - run rails generate devise:install in the terminal.  Insert config.action_mailer.default_url_options = { host: 'localhost', port: 3000 } into the routes/environments/development folder.  Then go to routes rb and copy the override functions from another project.

4 - create your devise model and controllers: rails g devise:controllers users and rails g devise User for the model.

5 - create the postgres DB in the command line: rake db:create

6 - fill in the migration table for users

7 - rake db:migrate in the terminal

8 - rails s in the console starts the server and will open up the login page.


4/17/19 - Pages For CC

Home Page - sessions new

This page will have a banner of some sort, a nav bar, an explanation of what the site aims to do for sports bettors.  Maybe a flow chart with little text.

On the NAV BAR: Home, My Profile, Enter Picks, Matchup Analytics

Models:  User, Matchup, Selection, elements needed for social platform.

If I write a function that can score user selections on the fly then they do not need to be graded.  User will not have to hit a button to score their picks.  The selection must hold the matchup id.  This way I can do double headers.  Use Home/Away attributes as identifiers.

For User records: call the function and pass the User object through it, have it spit out the user record.  Have functions for all the splits.  Record in a sport, last ten, in point spread ranges, on certain teams, in division games, conf games, out of conf games, when they pick the road team or home team.  They will have all these percentages in their personal profile, but maybe in their public profiles to others show their three best and their three worst.

Have a message board and a pm system maybe.  Promote conversation between people at sports books across the country.

Have sports bettors follow one another.  Can search for the profiles of others.  When there click a button which creates a new model(Fan?) where the one being followed is the Star and the one following is the Fan.  When Star makes picks, those picks appear on the fan's feed.

A message board that allows people to make things public like the buzz from one sports book to another or the biggest line moving games and maybe a chat room.

Create our own network that connects sports bettors.  Have an idea on what I need.  Should be able to put the logic together rather quickly the design and the mobile design specifically will take the longest.  I have to picture these web pages and see how it is best to display information on the cell phone.

Stat heavy pages: User Profile, matchup analytics.

Create a platform where handicappers can follow each other.  Probably needs to be a follow button for each category.  Handicappers can follow specific situations of other handicappers.  The selections of the handicappers you follow will appear on your feed in your profile.

You can't see your percentages, but you can see everybody elses and they can see yours.

How would the follow/fade work?  We'll need a migration with a Model called Tag.  Tag will take the id of the current user(:follower), the id of the handicapper being tagged(:star), it will also take the situation(game situation), and it will take the brand(fade or follow).  Need to be two buttons Fade and Follow next to each category.  When they are in fade or follow mode need to give them a stop button so they can unfollow the situation.  Need to create the new model on the profile page of the star.  This way I can grab the :follower_id, :star_id, :situation, and :brand.

Toughest thing may be the design to make the process of follow/unfollow neat and clean.  This can be done.  Loop through tag models and in the models where the follower_id is the current_user then display appropriate picks for them.  If current_user is the star then count them and get the user names of the :follower and display it for them.  How many people following you and who they are.

If the current_user matches the url id then it will display one thing, but if they do not match then it will display another(the follow/unfollow process)

So, now the site will have a follow/unfollow process that will allow handicapers to set up their own private database of information and then in their profile I can display their information for them.  If any of their faders are in action then list it and list them by how many faders are on it, same for the followers.  And if their faders/followers are on the opposite sides then it is a key game for the handicapper.

I still think entering in your picks should unlock the platform.  It is so important for people to get their information in.  Have to get them to do it.  Have to motivate them.

Gonna have to explain the platform to people.  How it works.  Three major moving parts:  User Selections, Matchup analysis, Private Consensus, Private Message also.

Have to get that core 100 there entering picks so handicappers have someone to fade/follow.

Models:

User - has_many selections, has_many tags, has_many contacts

:admin
:username
:agent, set a default to me but recruit agents in sportsbooks.

Matchup - has many selections

:all the things I plan on collecting in a game matchup.

Selection - belongs to User, belongs to Matchup

:user_id
:matchup_id
:selection

Tag - belongs_to user

:follower_id - current_user.id
:star_id - id of user being followed
:situation - game situation
:brand - fade or follow, depends on what button is selected

Contact - belongs to user

:sender_id - current_user.id
:username - name of recipient
:message - body of message 

You reach the homepage and the home page gives you an idea of what the site is - social platform that allows sports bettors to follow each other and build connections.  Handicappers will be able to fade or follow other handicappers in very specific game situations.  Handicappers can search through the profiles of other handicappers and choose to fade or follow any handicapper in an array of different situations.  That then populates your feed with the picks of these handicappers when they select a game in a situation you have faded/followed.  Your feed is then analyzed and organized for you and you are alerted to the strongest plays given the handicappers you are following.

So the fade follow process will involve grabbing the id of the star, the current user is the follower.

Need an index page that allows users to enter usernames, maybe have a directory of all names, let them look names up or let them just browse.  Have the stats of the first player on the screen and maybe an arrow that let them slides through from one profile to the next or a box where they can enter a username.

Have to see if I can grab both ids.

For the fade/follow need to build an index page with a grid.  Display the stats of the star and have the fade/follow buttons.

For the selections, they will need to click on the matchup and go to the matchup show page where I can grab all the data for selection: sport, date, matchup_id, current_user id, pick, spread.  On matchup edit is where we can do the complete analysis and consensus stuff.

The site will revolve around the selection/matchup process and also the fade/follow process.  Users will be able to build a feed with very unique information based on the selections of others, and then there is a global look at the entire community in regards to each matchup, plus have the average margin of victory stats(AMV) for a bunch of different game situations.

The feed analysis, the AMV stats, the global consensus.

Need to create a dummy project and set up the User, tag models and see if I can capture both ids and the game situation.  Once I can do that then need to figure out the process of making selections.



4/22/19  

In order to surf through profiles, make a directory with links.  You can click on them and be brought to that page.  Scratch that.  Create an index page where the user enters an id number into a box. This will be the id of the star.  We grab the stats of the star and display on the page along with the fade/follow buttons.  Now I have the star id and the follower id.  Have to list their stars on the index page so they can repunch in their id if they wish.

PAGES

Home - sessions new

Welcome About - about us.  The mission.  How the site works.

User Profile - shows their feed and their list of followers and who they follow along with their winning percentage and record in each sport, alos give them their id# maybe.  Results of their own private consensus.

Matchup Index - a page that will list all matchups that are yet to be played in each sport.  This code will have to take into account start times which I will have to control.

Matchup Show - this page will show matchup information and this will be the page where the user can make a pick on the game so the selection form will need to be on this page.

Matchup Edit - this will show the AMV stats and the global consensus stats for the game but this is the page where I will enter the scores as well under an admin if statement.

Welcome Index - Capper Index.  This will be where the current user can enter a number into a field and get returned the stats of the user whose id they have entered.  This is the page with the fade/follow logic.

1) Create the rest of the models and controllers

2) Test them to make sure you are saving information

3) Tackle the fade/follow logic first

