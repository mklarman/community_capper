1 - start a project with postgres: rails new Project_name --database=postgresql

2 - open project (subl .) and add gem 'devise' to the Gemfile and run bundle install in the terminal

3 - run rails generate devise:install in the terminal.  Insert config.action_mailer.default_url_options = { host: 'localhost', port: 3000 } into the routes/environments/development folder.  Then go to routes rb and copy the override functions from another project.

4 - create your devise model and controllers: rails g devise:controllers users and rails g devise User for the model.

5 - create the postgres DB in the command line: rake db:create

6 - fill in the migration table for users

7 - rake db:migrate in the terminal

8 - rails s in the console starts the server and will open up the login page.


4/17/19 - Pages For CC

Home Page - sessions new

This page will have a banner of some sort, a nav bar, an explanation of what the site aims to do for sports bettors.  Maybe a flow chart with little text.

On the NAV BAR: Home, My Profile, Enter Picks, Matchup Analytics

Models:  User, Matchup, Selection, elements needed for social platform.

If I write a function that can score user selections on the fly then they do not need to be graded.  User will not have to hit a button to score their picks.  The selection must hold the matchup id.  This way I can do double headers.  Use Home/Away attributes as identifiers.

For User records: call the function and pass the User object through it, have it spit out the user record.  Have functions for all the splits.  Record in a sport, last ten, in point spread ranges, on certain teams, in division games, conf games, out of conf games, when they pick the road team or home team.  They will have all these percentages in their personal profile, but maybe in their public profiles to others show their three best and their three worst.

Have a message board and a pm system maybe.  Promote conversation between people at sports books across the country.

Have sports bettors follow one another.  Can search for the profiles of others.  When there click a button which creates a new model(Fan?) where the one being followed is the Star and the one following is the Fan.  When Star makes picks, those picks appear on the fan's feed.

A message board that allows people to make things public like the buzz from one sports book to another or the biggest line moving games and maybe a chat room.

Create our own network that connects sports bettors.  Have an idea on what I need.  Should be able to put the logic together rather quickly the design and the mobile design specifically will take the longest.  I have to picture these web pages and see how it is best to display information on the cell phone.

Stat heavy pages: User Profile, matchup analytics.

Create a platform where handicappers can follow each other.  Probably needs to be a follow button for each category.  Handicappers can follow specific situations of other handicappers.  The selections of the handicappers you follow will appear on your feed in your profile.

You can't see your percentages, but you can see everybody elses and they can see yours.

How would the follow/fade work?  We'll need a migration with a Model called Tag.  Tag will take the id of the current user(:follower), the id of the handicapper being tagged(:star), it will also take the situation(game situation), and it will take the brand(fade or follow).  Need to be two buttons Fade and Follow next to each category.  When they are in fade or follow mode need to give them a stop button so they can unfollow the situation.  Need to create the new model on the profile page of the star.  This way I can grab the :follower_id, :star_id, :situation, and :brand.

Toughest thing may be the design to make the process of follow/unfollow neat and clean.  This can be done.  Loop through tag models and in the models where the follower_id is the current_user then display appropriate picks for them.  If current_user is the star then count them and get the user names of the :follower and display it for them.  How many people following you and who they are.

If the current_user matches the url id then it will display one thing, but if they do not match then it will display another(the follow/unfollow process)

So, now the site will have a follow/unfollow process that will allow handicapers to set up their own private database of information and then in their profile I can display their information for them.  If any of their faders are in action then list it and list them by how many faders are on it, same for the followers.  And if their faders/followers are on the opposite sides then it is a key game for the handicapper.

I still think entering in your picks should unlock the platform.  It is so important for people to get their information in.  Have to get them to do it.  Have to motivate them.

Gonna have to explain the platform to people.  How it works.  Three major moving parts:  User Selections, Matchup analysis, Private Consensus, Private Message also.

Have to get that core 100 there entering picks so handicappers have someone to fade/follow.

Models:

User

:admin
:username
:agent, set a default to me but recruit agents in sportsbooks.

Matchup

:all the things I plan on collecting in a game matchup.

Selection

:user_id
:matchup_id
:selection

Tag

:follower_id - current_user.id
:star_id - id of user being followed
:situation - game situation
:brand - fade or follow, depends on what button is selected

Contact

:sender_id - current_user.id
:username - name of recipient
:message - body of message 